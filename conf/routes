# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.Application.index
GET   /docs                         controllers.Application.redirectDocs
GET   /api                          controllers.Application.redirectDocs
GET   /swagger.json                 controllers.ApiHelpController.getResources
GET   /docs/*file                   controllers.Assets.at(path="/public/swagger-ui",file)
GET   /status                       controllers.Application.statusPage

#Race Routes
GET     /races                      controllers.RaceController.getAllRaces()
GET     /race/:raceId               controllers.RaceController.getRace(raceId: Long)

#Stage Routes
GET     /stages                     controllers.StageController.getStages
GET     /stage/:stageId             controllers.StageController.getStage(stageId : Long)

#Rider Routes
GET     /riders/:stageId             controllers.RiderController.getRiders(stageId : Long)
GET     /rider/:riderId              controllers.RiderController.getRider(riderId : Long)

#Racegroup Routes
GET     /racegroups/:stageId                 controllers.RaceGroupController.getAllRaceGroups(stageId : Long)
GET     /racegroup/:raceGroupId              controllers.RaceGroupController.getRaceGroup(raceGroupId: Long)
POST    /racegroup                           controllers.RaceGroupController.addRaceGroup()
PUT     /racegroup/:raceGroupId              controllers.RaceGroupController.updateRaceGroup(raceGroupId: Long)

#Notifcation Routes
GET     /notifications/:stageId              controllers.NotificationController.getNotifications(stageId : Long)
GET     /notification/:stageId/:timestamp    controllers.NotificationController.getNotificationsByStageAndTimestamp(timestamp : Long, stageId : Long)
POST    /notification/:stageId               controllers.NotificationController.addNotification(stageId : Long)

#RiderStageConnection Routes
GET     /riderStageConnections/:stageId             controllers.RiderStageConnectionController.getRiderStageConnections(stageId : Long)
GET     /riderStageConnection/:stageId/:riderId     controllers.RiderStageConnectionController.getRiderStageConnection(stageId : Long, riderId : Long)
PUT     /riderStageConnection/:rSCId                controllers.RiderStageConnectionController.updateRiderStageConnection(rSCId : Long)

#Judgment Routes
GET     /judgments                                  controllers.JudgmentController.getJudgments()
GET     /judgments/:stageId                         controllers.JudgmentController.getJudgmentsByStage(stageId : Long)
GET     /judgments/rider/:riderId                   controllers.JudgmentController.getJudgmentsByRider(riderId : Long)

#JudgmentRiderConnection Routes
GET     /judgmentRiderConnection/:riderId           controllers.JudgmentRiderConnectionController.getJudgmentRiderConnection(riderId : Long)
POST    /judgmentRiderConnection                    controllers.JudgmentRiderConnectionController.addJudgmentRiderConnection()

#Maillot Routes
GET     /maillots/:stageId                   controllers.MaillotController.getMaillots(stageId : Long)
GET     /maillot/:maillotId                  controllers.MaillotController.getMaillot(maillotId : Long)

#RiderRanking Routes
GET     /riderRankings/:riderStageConnectionId                  controllers.RiderRankingConnectionController.getRiderRankings(riderStageConnectionId : Long)
GET     /riderRankings/:riderStageConnectionId/:rankingType     controllers.RiderRankingConnectionController.getRiderRankingsByType(riderStageConnectionId : Long, rankingType : String)
GET     /riderRanking/rider/:riderId/:rankingType               controllers.RiderRankingConnectionController.getRiderRankingByRiderAndType(riderId : Long, rankingType : String)
PUT     /riderRanking/:riderRankingId                           controllers.RiderRankingConnectionController.updateRiderRanking(riderRankingId : Long)

#Import Route
GET     /import                             controllers.ImportController.importAllStaticData

# Settings Route
GET     /settings                           controllers.SettingsController.getSettings
PUT     /settings                           controllers.SettingsController.updateSettings

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
