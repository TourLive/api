# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.Application.index
GET   /docs                         controllers.Application.redirectDocs
GET   /api                          controllers.Application.redirectDocs
GET   /swagger.json                 controllers.ApiHelpController.getResources
GET   /docs/*file                   controllers.Assets.at(path="/public/swagger-ui",file)
GET   /status                       controllers.Application.statusPage
POST  /login                        controllers.Application.login

#Race Routes
GET     /races                      controllers.RaceController.getAllRaces()
GET     /races/:raceId              controllers.RaceController.getRace(raceId: Long)

#Stage Routes
GET     /stages                     controllers.StageController.getStages
GET     /stages/:stageId            controllers.StageController.getStage(stageId : Long)

#Rider Routes
GET     /riders/stages/:stageId     controllers.RiderController.getRiders(stageId : Long)
GET     /riders/:riderId            controllers.RiderController.getRider(riderId : Long)

#Racegroup Routes
GET     /racegroups/stages/:stageId                      controllers.RaceGroupController.getAllRaceGroups(stageId : Long)
GET     /racegroups/:raceGroupId                         controllers.RaceGroupController.getRaceGroup(raceGroupId: Long)
POST    /racegroups/stages/:stageId                      controllers.RaceGroupController.manageRaceGroups(stageId : Long)
PUT     /racegroups/:raceGroupId/stages/:stageId         controllers.RaceGroupController.updateRaceGroup(raceGroupId : String, stageId : Long)

#Notifcation Routes
GET     /notifications/stages/:stageId              controllers.NotificationController.getNotifications(stageId : Long)
GET     /notifications/stages/:stageId/:timestamp   controllers.NotificationController.getNotificationsByStageAndTimestamp(stageId : Long, timestamp : Long)
POST    /notifications/stages/:stageId                     controllers.NotificationController.addNotification(stageId : Long)

#RiderStageConnection Routes
GET     /riderstageconnections/stages/:stageId              controllers.RiderStageConnectionController.getRiderStageConnections(stageId : Long)
GET     /riderstageconnections/stages/:stageId/:riderId     controllers.RiderStageConnectionController.getRiderStageConnection(stageId : Long, riderId : Long)
PUT     /riderstageconnections/:rSCId                       controllers.RiderStageConnectionController.updateRiderStageConnection(rSCId : Long)

#Judgment Routes
GET     /judgments                                  controllers.JudgmentController.getJudgments()
GET     /judgments/stages/:stageId                  controllers.JudgmentController.getJudgmentsByStage(stageId : Long)
GET     /judgments/riders/:riderId                  controllers.JudgmentController.getJudgmentsByRider(riderId : Long)

#Reward Routes
GET     /rewards                                    controllers.RewardController.getRewards()

#JudgmentRiderConnection Routes
GET     /judgmentriderconnections/:riderId          controllers.JudgmentRiderConnectionController.getJudgmentRiderConnection(riderId : Long)
GET     /judgmentriderconnections/stages/:stageId   controllers.JudgmentRiderConnectionController.getJudgmentRiderConnectionByStage(stageId : Long)
POST    /judgmentriderconnections                   controllers.JudgmentRiderConnectionController.addJudgmentRiderConnection()
DELETE  /judgmentriderconnections/:appId            controllers.JudgmentRiderConnectionController.deleteJudgmentRiderConnection(appId : String)

#Maillot Routes
GET     /maillots/stages/:stageId                   controllers.MaillotController.getMaillots(stageId : Long)
GET     /maillots/:maillotId                        controllers.MaillotController.getMaillot(maillotId : Long)

#RiderRanking Routes
GET     /riderrankings/riderstageConnections/:riderStageConnectionId                                controllers.RiderRankingConnectionController.getRiderRankings(riderStageConnectionId : Long)
GET     /riderrankings/riderstageConnections/:riderStageConnectionId/rankingtypes/:rankingType      controllers.RiderRankingConnectionController.getRiderRankingsByType(riderStageConnectionId : Long, rankingType : String)
GET     /riderrankings/riders/:riderId/rankingstypes/:rankingType                                   controllers.RiderRankingConnectionController.getRiderRankingByRiderAndType(riderId : Long, rankingType : String)
PUT     /riderrankings/:riderRankingId                                                              controllers.RiderRankingConnectionController.updateRiderRanking(riderRankingId : Long)

#Import Route
GET     /import                            controllers.ImportController.importAllStaticData

# Settings Route
GET     /settings                          controllers.SettingsController.getSettings
PUT     /settings                          controllers.SettingsController.updateSettings

# Update Route
PUT    /update/:stageId                    controllers.UpdateController.updateStage(stageId : Long)

#GPX Tracks Routes
GET     /gpxtracks/stages/:stageId         controllers.GPXController.getGPSTracksByStageId(stageId : Long)
POST    /gpxtracks/stages/:stageId         controllers.GPXController.addGPSTracksForStageById(stageId : Long)
DELETE  /gpxtracks/stages/:stageId                controllers.GPXController.deleteGPSTracksForStageById(stageId : Long)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
